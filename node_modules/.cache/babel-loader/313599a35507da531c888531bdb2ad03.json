{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _toConsumableArray from\"C:/Users/Aleksandra Miteva/Desktop/ovning-memory-game-galinamiteva/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/Aleksandra Miteva/Desktop/ovning-memory-game-galinamiteva/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';function Card(_ref){var id=_ref.id,color=_ref.color,game=_ref.game,flippedCount=_ref.flippedCount,setFlippedCount=_ref.setFlippedCount,flippedIndexes=_ref.flippedIndexes,setFlippedIndexes=_ref.setFlippedIndexes;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),flipped=_useState2[0],set=_useState2[1];var _useSpring=useSpring({opacity:flipped?1:0,transform:\"perspective(600px) rotateX(\".concat(flipped?180:0,\"deg)\"),config:{mass:5,tension:500,friction:80}}),transform=_useSpring.transform,opacity=_useSpring.opacity;useEffect(function(){if(flippedIndexes[2]===true&&flippedIndexes.indexOf(id)>-1){setTimeout(function(){set(function(state){return!state;});setFlippedCount(flippedCount+1);setFlippedIndexes([]);},1000);}else if(flippedIndexes[2]===false&&id===0){setFlippedCount(flippedCount+1);setFlippedIndexes([]);}},[flippedIndexes]);var onCardClick=function onCardClick(){if(!game[id].flipped&&flippedCount%3===0){set(function(state){return!state;});setFlippedCount(flippedCount+1);var newIndexes=_toConsumableArray(flippedIndexes);newIndexes.push(id);setFlippedIndexes(newIndexes);}else if(flippedCount%3===1&&!game[id].flipped&&flippedIndexes.indexOf(id)<0){set(function(state){return!state;});setFlippedCount(flippedCount+1);var _newIndexes=_toConsumableArray(flippedIndexes);_newIndexes.push(id);setFlippedIndexes(_newIndexes);}};return/*#__PURE__*/_jsxs(\"div\",{onClick:onCardClick,children:[/*#__PURE__*/_jsx(a.div,{className:\"c back\",style:{opacity:opacity.interpolate(function(o){return 1-o;}),transform:transform}}),/*#__PURE__*/_jsx(a.div,{className:\"c front\",style:{opacity:opacity,transform:transform.interpolate(function(t){return\"\".concat(t,\" rotateX(180deg)\");}),background:color}})]});}export default Card;","map":{"version":3,"sources":["C:/Users/Aleksandra Miteva/Desktop/ovning-memory-game-galinamiteva/src/components/Card.js"],"names":["React","Card","id","color","game","flippedCount","setFlippedCount","flippedIndexes","setFlippedIndexes","useState","flipped","set","useSpring","opacity","transform","config","mass","tension","friction","useEffect","indexOf","setTimeout","state","onCardClick","newIndexes","push","interpolate","o","t","background"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nfunction Card({\r\n    id,\r\n    color,\r\n    game,\r\n    flippedCount,\r\n    setFlippedCount,\r\n    flippedIndexes,\r\n    setFlippedIndexes,\r\n  }) {\r\n    const [flipped, set] = useState(false)\r\n    const {transform, opacity} = useSpring({\r\n      opacity: flipped ? 1 : 0,\r\n      transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\r\n      config: {mass: 5, tension: 500, friction: 80},\r\n    })\r\n  \r\n    useEffect(() => {\r\n        if (flippedIndexes[2] === true && flippedIndexes.indexOf(id) > -1) {\r\n            setTimeout(() => {\r\n              set(state => !state)\r\n              setFlippedCount(flippedCount + 1)\r\n              setFlippedIndexes([])\r\n            }, 1000)\r\n          } else if (flippedIndexes[2] === false && id === 0) {\r\n            setFlippedCount(flippedCount + 1)\r\n            setFlippedIndexes([])\r\n          }    }, [flippedIndexes])\r\n  \r\n    const onCardClick = () => {\r\n        if (!game[id].flipped && flippedCount % 3 === 0) {\r\n            set(state => !state)\r\n            setFlippedCount(flippedCount + 1)\r\n            const newIndexes = [...flippedIndexes]\r\n            newIndexes.push(id)\r\n            setFlippedIndexes(newIndexes)\r\n          } else if (\r\n            flippedCount % 3 === 1 &&\r\n            !game[id].flipped &&\r\n            flippedIndexes.indexOf(id) < 0\r\n          ) {\r\n            set(state => !state)\r\n            setFlippedCount(flippedCount + 1)\r\n            const newIndexes = [...flippedIndexes]\r\n            newIndexes.push(id)\r\n            setFlippedIndexes(newIndexes)\r\n         }\r\n    }\r\n    \r\n  \r\n    return (\r\n      <div onClick={onCardClick}>\r\n        <a.div\r\n          className=\"c back\"\r\n          style={{\r\n            opacity: opacity.interpolate(o => 1 - o),\r\n            transform,\r\n          }}\r\n        />\r\n        <a.div\r\n          className=\"c front\"\r\n          style={{\r\n            opacity,\r\n            transform: transform.interpolate(t => `${t} rotateX(180deg)`),\r\n            background: color,\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Card;\r\n"]},"metadata":{},"sourceType":"module"}