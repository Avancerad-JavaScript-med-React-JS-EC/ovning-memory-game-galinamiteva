{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Aleksandra Miteva\\\\Desktop\\\\ovning-memory-game-galinamiteva\\\\src\\\\components\\\\Board\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '../Card';\nimport './styles.css';\nexport default function Board({\n  disabled,\n  dimension,\n  cards,\n  flipped,\n  solved,\n  handleClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    style: {\n      width: dimension,\n      height: dimension\n    },\n    children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n      id: card.id,\n      type: card.type,\n      width: dimension / 5,\n      height: dimension / 5,\n      flipped: flipped.includes(card.id),\n      solved: solved.includes(card.id),\n      handleClick: handleClick,\n      disabled: disabled || solved.includes(card.id),\n      ...card\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_c = Board;\nBoard.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  dimension: PropTypes.number.isRequired,\n  cards: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  flipped: PropTypes.arrayOf(PropTypes.number).isRequired,\n  solved: PropTypes.arrayOf(PropTypes.number).isRequired,\n  handleClick: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/Aleksandra Miteva/Desktop/ovning-memory-game-galinamiteva/src/components/Board/index.js"],"names":["React","PropTypes","Card","Board","disabled","dimension","cards","flipped","solved","handleClick","width","height","map","card","id","type","includes","propTypes","bool","isRequired","number","arrayOf","shape","func"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAO,cAAP;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA,KAAvB;AAA8BC,EAAAA,OAA9B;AAAuCC,EAAAA,MAAvC;AAA+CC,EAAAA;AAA/C,CAAf,EAA6E;AACxF,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AACM,IAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAEL,SADJ;AAEHM,MAAAA,MAAM,EAAEN;AAFL,KADb;AAAA,cAKKC,KAAK,CAACM,GAAN,CAAWC,IAAD,iBACP,QAAC,IAAD;AAEI,MAAA,EAAE,EAAEA,IAAI,CAACC,EAFb;AAGI,MAAA,IAAI,EAAED,IAAI,CAACE,IAHf;AAII,MAAA,KAAK,EAAEV,SAAS,GAAC,CAJrB;AAKI,MAAA,MAAM,EAAEA,SAAS,GAAC,CALtB;AAMI,MAAA,OAAO,EAAEE,OAAO,CAACS,QAAR,CAAiBH,IAAI,CAACC,EAAtB,CANb;AAOI,MAAA,MAAM,EAAEN,MAAM,CAACQ,QAAP,CAAgBH,IAAI,CAACC,EAArB,CAPZ;AAQI,MAAA,WAAW,EAAEL,WARjB;AASI,MAAA,QAAQ,EAAEL,QAAQ,IAAII,MAAM,CAACQ,QAAP,CAAgBH,IAAI,CAACC,EAArB,CAT1B;AAAA,SAUQD;AAVR,OACSA,IAAI,CAACC,EADd;AAAA;AAAA;AAAA;AAAA,YADH;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;KAvBuBX,K;AAyBxBA,KAAK,CAACc,SAAN,GAAkB;AACdb,EAAAA,QAAQ,EAAEH,SAAS,CAACiB,IAAV,CAAeC,UADX;AAEdd,EAAAA,SAAS,EAAEJ,SAAS,CAACmB,MAAV,CAAiBD,UAFd;AAGdb,EAAAA,KAAK,EAAEL,SAAS,CAACoB,OAAV,CAAkBpB,SAAS,CAACqB,KAAV,CAAgB,EAAhB,CAAlB,EAAuCH,UAHhC;AAIdZ,EAAAA,OAAO,EAAEN,SAAS,CAACoB,OAAV,CAAkBpB,SAAS,CAACmB,MAA5B,EAAoCD,UAJ/B;AAKdX,EAAAA,MAAM,EAAEP,SAAS,CAACoB,OAAV,CAAkBpB,SAAS,CAACmB,MAA5B,EAAoCD,UAL9B;AAMdV,EAAAA,WAAW,EAAER,SAAS,CAACsB,IAAV,CAAeJ;AANd,CAAlB","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Card from '../Card';\r\n\r\nimport './styles.css';\r\n\r\nexport default function Board({ disabled, dimension, cards, flipped, solved, handleClick }) {\r\n    return (\r\n        <div className=\"board\"\r\n              style={{\r\n                  width: dimension,\r\n                  height: dimension\r\n              }}>\r\n            {cards.map((card) => (\r\n                <Card \r\n                    key={card.id}    \r\n                    id={card.id}\r\n                    type={card.type}\r\n                    width={dimension/5}\r\n                    height={dimension/5}\r\n                    flipped={flipped.includes(card.id)}\r\n                    solved={solved.includes(card.id)}\r\n                    handleClick={handleClick}\r\n                    disabled={disabled || solved.includes(card.id)}\r\n                    {...card}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nBoard.propTypes = {\r\n    disabled: PropTypes.bool.isRequired,\r\n    dimension: PropTypes.number.isRequired,\r\n    cards: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n    flipped: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    solved: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    handleClick: PropTypes.func.isRequired\r\n}"]},"metadata":{},"sourceType":"module"}