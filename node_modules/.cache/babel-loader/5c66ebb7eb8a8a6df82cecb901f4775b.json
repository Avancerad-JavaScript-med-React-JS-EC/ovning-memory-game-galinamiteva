{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Aleksandra Miteva\\\\Desktop\\\\ovning-memory-game-galinamiteva\\\\src\\\\components\\\\Board\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '../Card';\nimport './styles.css';\nexport default function Board({\n  disabled,\n  dimension,\n  cards,\n  flipped,\n  solved,\n  handleClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    style: {\n      width: dimension,\n      height: dimension\n    },\n    children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n      id: card.id,\n      type: card.type,\n      width: dimension / 4.5,\n      height: dimension / 4.5,\n      back: card.back,\n      front: card.front,\n      flipped: flipped.includes(card.id) //array med alla som har id=1\n      ,\n      solved: solved.includes(card.id),\n      handleClick: handleClick,\n      disabled: disabled || solved.includes(card.id)\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_c = Board;\nBoard.propTypes = {\n  dimension: PropTypes.number.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  cards: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  flipped: PropTypes.arrayOf(PropTypes.number).isRequired,\n  solved: PropTypes.arrayOf(PropTypes.number).isRequired,\n  handleClick: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/Aleksandra Miteva/Desktop/ovning-memory-game-galinamiteva/src/components/Board/index.js"],"names":["React","PropTypes","Card","Board","disabled","dimension","cards","flipped","solved","handleClick","width","height","map","card","id","type","back","front","includes","propTypes","number","isRequired","bool","arrayOf","shape","func"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,cAAP;AAEA,eAAe,SAASC,KAAT,CAAgB;AAC3BC,EAAAA,QAD2B;AAE3BC,EAAAA,SAF2B;AAG3BC,EAAAA,KAH2B;AAI3BC,EAAAA,OAJ2B;AAK3BC,EAAAA,MAL2B;AAM3BC,EAAAA;AAN2B,CAAhB,EAQb;AACE,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AACM,IAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAEL,SADJ;AAEHM,MAAAA,MAAM,EAAEN;AAFL,KADb;AAAA,cAKKC,KAAK,CAACM,GAAN,CAAWC,IAAD,iBACP,QAAC,IAAD;AAEI,MAAA,EAAE,EAAEA,IAAI,CAACC,EAFb;AAGI,MAAA,IAAI,EAAED,IAAI,CAACE,IAHf;AAII,MAAA,KAAK,EAAGV,SAAS,GAAE,GAJvB;AAKI,MAAA,MAAM,EAAEA,SAAS,GAAC,GALtB;AAMI,MAAA,IAAI,EAAEQ,IAAI,CAACG,IANf;AAOI,MAAA,KAAK,EAAEH,IAAI,CAACI,KAPhB;AAQI,MAAA,OAAO,EAAEV,OAAO,CAACW,QAAR,CAAiBL,IAAI,CAACC,EAAtB,CARb,CAQ0C;AAR1C;AASI,MAAA,MAAM,EAAEN,MAAM,CAACU,QAAP,CAAiBL,IAAI,CAACC,EAAtB,CATZ;AAUI,MAAA,WAAW,EAAGL,WAVlB;AAWI,MAAA,QAAQ,EAAEL,QAAQ,IAAII,MAAM,CAACU,QAAP,CAAiBL,IAAI,CAACC,EAAtB;AAX1B,OACSD,IAAI,CAACC,EADd;AAAA;AAAA;AAAA;AAAA,YADH;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;KAhCuBX,K;AAkCxBA,KAAK,CAACgB,SAAN,GAAkB;AACfd,EAAAA,SAAS,EAAEJ,SAAS,CAACmB,MAAV,CAAiBC,UADb;AAEfjB,EAAAA,QAAQ,EAAEH,SAAS,CAACqB,IAAV,CAAeD,UAFV;AAGdf,EAAAA,KAAK,EAAEL,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACuB,KAAV,CAAgB,EAAhB,CAAlB,EAAuCH,UAHhC;AAIdd,EAAAA,OAAO,EAAEN,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACmB,MAA5B,EAAoCC,UAJ/B;AAKdb,EAAAA,MAAM,EAAEP,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACmB,MAA5B,EAAoCC,UAL9B;AAMdZ,EAAAA,WAAW,EAAER,SAAS,CAACwB,IAAV,CAAeJ;AANd,CAAlB","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '../Card';\r\nimport './styles.css';\r\n\r\nexport default function Board ({\r\n    disabled, \r\n    dimension,\r\n    cards,\r\n    flipped, \r\n    solved,\r\n    handleClick,\r\n\r\n}){\r\n    return (\r\n        <div className=\"board\"\r\n              style={{\r\n                  width: dimension,\r\n                  height: dimension\r\n              }}>\r\n            {cards.map((card) => (\r\n                <Card \r\n                    key={card.id}    \r\n                    id={card.id}\r\n                    type={card.type}\r\n                    width ={dimension/ 4.5}\r\n                    height={dimension/4.5}                    \r\n                    back={card.back}\r\n                    front={card.front}\r\n                    flipped={flipped.includes(card.id)}   //array med alla som har id=1\r\n                    solved={solved.includes (card.id)}\r\n                    handleClick= {handleClick}\r\n                    disabled={disabled || solved.includes (card.id) }\r\n                />\r\n            ))}    \r\n        </div>\r\n    )\r\n}\r\n\r\nBoard.propTypes = {\r\n   dimension: PropTypes.number.isRequired,\r\n   disabled: PropTypes.bool.isRequired,\r\n    cards: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n    flipped: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    solved: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    handleClick: PropTypes.func.isRequired\r\n}"]},"metadata":{},"sourceType":"module"}