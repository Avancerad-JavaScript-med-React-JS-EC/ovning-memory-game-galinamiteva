{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Aleksandra Miteva\\\\Desktop\\\\ovning-memory-game-galinamiteva\\\\src\\\\components\\\\Board\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '../Card';\nimport './styles.css';\nexport default function Board({\n  disabled,\n  dimension,\n  cards,\n  flipped,\n  handleClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n      id: card.id,\n      type: card.type,\n      width: dimension / 4.5,\n      height: dimension / 4.5,\n      back: card.back,\n      front: card.front,\n      flipped: flipped.includes(card.id) //array med alla som har id=1\n      ,\n      handleClick: handleClick\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = Board;\nBoard.propTypes = {\n  dimension: PropTypes.number.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  cards: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  flipped: PropTypes.arrayOf(PropTypes.number).isRequired,\n  // solved: PropTypes.arrayOf(PropTypes.number).isRequired,\n  handleClick: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/Aleksandra Miteva/Desktop/ovning-memory-game-galinamiteva/src/components/Board/index.js"],"names":["React","PropTypes","Card","Board","disabled","dimension","cards","flipped","handleClick","map","card","id","type","back","front","includes","propTypes","number","isRequired","bool","arrayOf","shape","func"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,cAAP;AAEA,eAAe,SAASC,KAAT,CAAgB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA,KAAvB;AAA8BC,EAAAA,OAA9B;AAAuCC,EAAAA;AAAvC,CAAhB,EAAoE;AAC/E,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACKF,KAAK,CAACG,GAAN,CAAWC,IAAD,iBACP,QAAC,IAAD;AAEI,MAAA,EAAE,EAAEA,IAAI,CAACC,EAFb;AAGI,MAAA,IAAI,EAAED,IAAI,CAACE,IAHf;AAII,MAAA,KAAK,EAAGP,SAAS,GAAE,GAJvB;AAKI,MAAA,MAAM,EAAEA,SAAS,GAAC,GALtB;AAMI,MAAA,IAAI,EAAEK,IAAI,CAACG,IANf;AAOI,MAAA,KAAK,EAAEH,IAAI,CAACI,KAPhB;AAQI,MAAA,OAAO,EAAEP,OAAO,CAACQ,QAAR,CAAiBL,IAAI,CAACC,EAAtB,CARb,CAQ0C;AAR1C;AASI,MAAA,WAAW,EAAGH;AATlB,OACSE,IAAI,CAACC,EADd;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;KAlBuBR,K;AAoBxBA,KAAK,CAACa,SAAN,GAAkB;AACfX,EAAAA,SAAS,EAAEJ,SAAS,CAACgB,MAAV,CAAiBC,UADb;AAEfd,EAAAA,QAAQ,EAAEH,SAAS,CAACkB,IAAV,CAAeD,UAFV;AAGdZ,EAAAA,KAAK,EAAEL,SAAS,CAACmB,OAAV,CAAkBnB,SAAS,CAACoB,KAAV,CAAgB,EAAhB,CAAlB,EAAuCH,UAHhC;AAIdX,EAAAA,OAAO,EAAEN,SAAS,CAACmB,OAAV,CAAkBnB,SAAS,CAACgB,MAA5B,EAAoCC,UAJ/B;AAKf;AACCV,EAAAA,WAAW,EAAEP,SAAS,CAACqB,IAAV,CAAeJ;AANd,CAAlB","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '../Card';\r\nimport './styles.css';\r\n\r\nexport default function Board ({ disabled, dimension, cards, flipped, handleClick}){\r\n    return (\r\n        <div className='board'>\r\n            {cards.map((card) => (\r\n                <Card \r\n                    key={card.id}    \r\n                    id={card.id}\r\n                    type={card.type}\r\n                    width ={dimension/ 4.5}\r\n                    height={dimension/4.5}                    \r\n                    back={card.back}\r\n                    front={card.front}\r\n                    flipped={flipped.includes(card.id)}   //array med alla som har id=1\r\n                    handleClick= {handleClick}\r\n                />\r\n            ))}    \r\n        </div>\r\n    )\r\n}\r\n\r\nBoard.propTypes = {\r\n   dimension: PropTypes.number.isRequired,\r\n   disabled: PropTypes.bool.isRequired,\r\n    cards: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n    flipped: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n   // solved: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    handleClick: PropTypes.func.isRequired\r\n}"]},"metadata":{},"sourceType":"module"}